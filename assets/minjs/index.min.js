function Index(){return this instanceof Index?void this.init():new Index}Index.prototype={init:function(){this.initGloDOMs(),this.fetchAllPeriods()},fetchAllPeriods:function(){var t=this;$.hkAjax("get","/periods",{},function(e){console.log(e),t.sortByTimestamp(e),t.renderPeriodList(e),t.clickEvent()})},clickEvent:function(){var t=this;$main.on("click",".result span",function(){var e=$(this),n=$(this).parent().attr("data-noteid"),i=function(){e.addClass("active").siblings().removeClass("active")};if(e.hasClass("pending"))t.postNoteResultClick(n,null,i);else if(e.hasClass("success"))t.postNoteResultClick(n,!0,i);else{if(!e.hasClass("fail"))throw new Error("result click exception!");t.postNoteResultClick(n,!1,i)}}).on("click",".new-todo-btn",function(){$(this).attr("data-periodid")}).on("click",".new-diary-btn",function(){$(this).attr("data-periodid")})},postNoteResultClick:function(t,e,n){$.hkAjax("post","/notes/changenotestatus",{noteId:t,status:e},function(t){$.hkPopupTip(t,2e3),console.log("post note result click res:",t),n()},"text")},sortByTimestamp:function(t){for(var e=t.periods.length,n=0;n<e;n++)t.periods[n].notes.sort(function(t,e){return e.createdDate-t.createdDate})},renderPeriodList:function(t){var e=template("tpl-period-list",t);$main.append(e)},initGloDOMs:function(){$main=$("main")}},Object.defineProperty(Index.prototype,"constructor",{enumerable:!1,value:Index}),$(function(){new Index});